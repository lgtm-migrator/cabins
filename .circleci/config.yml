version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
      - image: circleci/postgres:9.6.2-alpine
        auth:
          username: wgarlock
          password: $DOCKERHUB_PASSWORD 
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: test12345
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            flake8
            isort ./cabins-app --check --diff
            coverage run -m pytest --pyargs cabins_test
            coverage xml -i
    
      - codecov/upload:
          file: ./coverage.xml
  
      - run:
          name: Build Docker image
          when: on_success
          command: |
            docker build -t cabins-app:latest .
            docker tag cabins-app:latest wgarlock/cabins-app:latest
            docker tag cabins-app:latest wgarlock/cabins-app:v0.0.12
            echo "$DOCKERHUB_PASSWORD" | docker login -u "wgarlock" --password-stdin
            docker push wgarlock/cabins-app:latest
            docker push wgarlock/cabins-app:v0.0.12

      - run:
          name: Install Deployment Requirements
          when: on_success 
          command: |
            sudo apt install curl
            curl -LO https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz
            tar -C /tmp/ -zxvf helm-v3.4.2-linux-amd64.tar.gz
            sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm
            sudo rm helm-v3.4.2-linux-amd64.tar.gz
            helm version


            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl


            curl -LO https://github.com/digitalocean/doctl/releases/download/v1.54.0/doctl-1.54.0-linux-amd64.tar.gz
            tar -C /tmp/ -zxvf doctl-1.54.0-linux-amd64.tar.gz
            sudo mv /tmp/doctl /usr/local/bin/doctl
            sudo rm doctl-1.54.0-linux-amd64.tar.gz
            doctl version

      - run:
          name: Deploy Code
          when: on_success 
          command: |
            doctl auth init --access-token=$DO_TOKEN
            doctl kubernetes cluster kubeconfig save cabins
            cd helm
            helm upgrade cabins-app cabins-app --set \
            secert.AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,\
            secert.AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY,\
            secert.BROKER_URL=$BROKER_URL,\
            secert.CELERY_RESULT_BACKEND=$CELERY_RESULT_BACKEND,\
            secert.DATABASE_URL_PROD=$DATABASE_URL_PROD,\
            secert.DATABASE_URL_DEV=$DATABASE_URL_DEV,\
            secert.EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD,\
            secert.RECAPTCHA_PUBLIC_KEY=$RECAPTCHA_PUBLIC_KEY,\
            secert.RECAPTCHA_PRIVATE_KEY=$RECAPTCHA_PRIVATE_KEY,\
            secert.REDIS_CACHE_URL=$REDIS_CACHE_URL,\
            secert.SECRET_KEY=$SECRET_KEY
            cd ..

  
  
  
  
  
  
  
  
  
  
  